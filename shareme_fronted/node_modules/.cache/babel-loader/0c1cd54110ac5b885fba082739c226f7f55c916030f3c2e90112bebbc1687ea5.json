{"ast":null,"code":"import { isPlainObject } from \"./chunk-P7IHHPD7.mjs\";\n\n// src/middleware/jsonRequest.js\nvar serializeTypes = [\"boolean\", \"string\", \"number\"];\nvar isBuffer = obj => !!obj.constructor && typeof obj.constructor.isBuffer === \"function\" && obj.constructor.isBuffer(obj);\nvar jsonRequest_default = () => ({\n  processOptions: options => {\n    const body = options.body;\n    if (!body) {\n      return options;\n    }\n    const isStream = typeof body.pipe === \"function\";\n    const shouldSerialize = !isStream && !isBuffer(body) && (serializeTypes.indexOf(typeof body) !== -1 || Array.isArray(body) || isPlainObject(body));\n    if (!shouldSerialize) {\n      return options;\n    }\n    return Object.assign({}, options, {\n      body: JSON.stringify(options.body),\n      headers: Object.assign({}, options.headers, {\n        \"Content-Type\": \"application/json\"\n      })\n    });\n  }\n});\nexport { jsonRequest_default };","map":{"version":3,"mappings":";;;AAEA,IAAMA,iBAAiB,CAAC,WAAW,UAAU,QAAQ;AACrD,IAAMC,WAAWC,OACf,CAAC,CAACA,IAAIC,eACN,OAAOD,IAAIC,YAAYF,aAAa,cACpCC,IAAIC,YAAYF,SAASC,GAAG;AAE9B,IAAOE,sBAAQ,OAAO;EACpBC,gBAAgBC,WAAW;IACzB,MAAMC,OAAOD,QAAQC;IACrB,IAAI,CAACA,MAAM;MACT,OAAOD;IACT;IAEA,MAAME,WAAW,OAAOD,KAAKE,SAAS;IACtC,MAAMC,kBACJ,CAACF,YACD,CAACP,SAASM,IAAI,MACbP,eAAeW,QAAQ,OAAOJ,IAAI,MAAM,MAAMK,MAAMC,QAAQN,IAAI,KAAKO,cAAcP,IAAI;IAE1F,IAAI,CAACG,iBAAiB;MACpB,OAAOJ;IACT;IAEA,OAAOS,OAAOC,OAAO,CAAC,GAAGV,SAAS;MAChCC,MAAMU,KAAKC,UAAUZ,QAAQC,IAAI;MACjCY,SAASJ,OAAOC,OAAO,CAAC,GAAGV,QAAQa,SAAS;QAC1C,gBAAgB;MAClB,CAAC;IACH,CAAC;EACH;AACF","names":["serializeTypes","isBuffer","obj","constructor","jsonRequest_default","processOptions","options","body","isStream","pipe","shouldSerialize","indexOf","Array","isArray","isPlainObject","Object","assign","JSON","stringify","headers"],"sources":["/Users/Shared/Files From f.localized/GitHub/ReactWebApplications/SHAREME/shareme_fronted/node_modules/get-it/src/middleware/jsonRequest.js"],"sourcesContent":["import {isPlainObject} from 'is-plain-object'\n\nconst serializeTypes = ['boolean', 'string', 'number']\nconst isBuffer = obj =>\n  !!obj.constructor &&\n  typeof obj.constructor.isBuffer === 'function' &&\n  obj.constructor.isBuffer(obj)\n\nexport default () => ({\n  processOptions: options => {\n    const body = options.body\n    if (!body) {\n      return options\n    }\n\n    const isStream = typeof body.pipe === 'function'\n    const shouldSerialize =\n      !isStream &&\n      !isBuffer(body) &&\n      (serializeTypes.indexOf(typeof body) !== -1 || Array.isArray(body) || isPlainObject(body))\n\n    if (!shouldSerialize) {\n      return options\n    }\n\n    return Object.assign({}, options, {\n      body: JSON.stringify(options.body),\n      headers: Object.assign({}, options.headers, {\n        'Content-Type': 'application/json'\n      })\n    })\n  }\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}