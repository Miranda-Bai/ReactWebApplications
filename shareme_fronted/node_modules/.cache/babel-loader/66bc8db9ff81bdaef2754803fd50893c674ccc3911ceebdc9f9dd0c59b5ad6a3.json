{"ast":null,"code":"// src/middleware/progress/browser-progress.js\nvar browser_progress_default = () => ({\n  onRequest: evt => {\n    if (evt.adapter !== \"xhr\") {\n      return;\n    }\n    const xhr = evt.request;\n    const context = evt.context;\n    if (\"upload\" in xhr && \"onprogress\" in xhr.upload) {\n      xhr.upload.onprogress = handleProgress(\"upload\");\n    }\n    if (\"onprogress\" in xhr) {\n      xhr.onprogress = handleProgress(\"download\");\n    }\n    function handleProgress(stage) {\n      return event => {\n        const percent = event.lengthComputable ? event.loaded / event.total * 100 : -1;\n        context.channels.progress.publish({\n          stage,\n          percent,\n          total: event.total,\n          loaded: event.loaded,\n          lengthComputable: event.lengthComputable\n        });\n      };\n    }\n  }\n});\nexport { browser_progress_default };","map":{"version":3,"mappings":";AAAA,IAAOA,2BAAQ,OAAO;EACpBC,WAAWC,OAAO;IAChB,IAAIA,IAAIC,YAAY,OAAO;MACzB;IACF;IAEA,MAAMC,MAAMF,IAAIG;IAChB,MAAMC,UAAUJ,IAAII;IAEpB,IAAI,YAAYF,OAAO,gBAAgBA,IAAIG,QAAQ;MACjDH,IAAIG,OAAOC,aAAaC,eAAe,QAAQ;IACjD;IAEA,IAAI,gBAAgBL,KAAK;MACvBA,IAAII,aAAaC,eAAe,UAAU;IAC5C;IAEA,SAASA,eAAeC,OAAO;MAC7B,OAAOC,SAAS;QACd,MAAMC,UAAUD,MAAME,mBAAoBF,MAAMG,SAASH,MAAMI,QAAS,MAAM;QAC9ET,QAAQU,SAASC,SAASC,QAAQ;UAChCR;UACAE;UACAG,OAAOJ,MAAMI;UACbD,QAAQH,MAAMG;UACdD,kBAAkBF,MAAME;QAC1B,CAAC;MACH;IACF;EACF;AACF","names":["browser_progress_default","onRequest","evt","adapter","xhr","request","context","upload","onprogress","handleProgress","stage","event","percent","lengthComputable","loaded","total","channels","progress","publish"],"sources":["/Users/Shared/Files From f.localized/GitHub/ReactWebApplications/SHAREME/shareme_fronted/node_modules/get-it/src/middleware/progress/browser-progress.js"],"sourcesContent":["export default () => ({\n  onRequest: evt => {\n    if (evt.adapter !== 'xhr') {\n      return\n    }\n\n    const xhr = evt.request\n    const context = evt.context\n\n    if ('upload' in xhr && 'onprogress' in xhr.upload) {\n      xhr.upload.onprogress = handleProgress('upload')\n    }\n\n    if ('onprogress' in xhr) {\n      xhr.onprogress = handleProgress('download')\n    }\n\n    function handleProgress(stage) {\n      return event => {\n        const percent = event.lengthComputable ? (event.loaded / event.total) * 100 : -1\n        context.channels.progress.publish({\n          stage,\n          percent,\n          total: event.total,\n          loaded: event.loaded,\n          lengthComputable: event.lengthComputable\n        })\n      }\n    }\n  }\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}