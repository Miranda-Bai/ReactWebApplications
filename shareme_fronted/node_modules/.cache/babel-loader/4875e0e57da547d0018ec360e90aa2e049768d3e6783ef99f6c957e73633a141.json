{"ast":null,"code":"// src/middleware/headers.js\nvar headers_default = function (headers) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return {\n    processOptions: options => {\n      const existing = options.headers || {};\n      options.headers = opts.override ? Object.assign({}, existing, headers) : Object.assign({}, headers, existing);\n      return options;\n    }\n  };\n};\nexport { headers_default };","map":{"version":3,"mappings":";AAAA,IAAOA,kBAAQ,UAACC;EAAA,IAASC,2EAAO,CAAC;EAAA,OAAO;IACtCC,gBAAgBC,WAAW;MACzB,MAAMC,WAAWD,QAAQH,WAAW,CAAC;MACrCG,QAAQH,UAAUC,KAAKI,WACnBC,OAAOC,OAAO,CAAC,GAAGH,UAAUJ,OAAO,IACnCM,OAAOC,OAAO,CAAC,GAAGP,SAASI,QAAQ;MAEvC,OAAOD;IACT;EACF;AAAA","names":["headers_default","headers","opts","processOptions","options","existing","override","Object","assign"],"sources":["/Users/Shared/Files From f.localized/GitHub/ReactWebApplications/SHAREME/shareme_fronted/node_modules/get-it/src/middleware/headers.js"],"sourcesContent":["export default (headers, opts = {}) => ({\n  processOptions: options => {\n    const existing = options.headers || {}\n    options.headers = opts.override\n      ? Object.assign({}, existing, headers)\n      : Object.assign({}, headers, existing)\n\n    return options\n  }\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}