{"ast":null,"code":"import { __commonJS, __toESM } from \"./chunk-U7HSCTZN.mjs\";\n\n// node_modules/capture-stack-trace/index.js\nvar require_capture_stack_trace = __commonJS({\n  \"node_modules/capture-stack-trace/index.js\"(exports, module) {\n    \"use strict\";\n\n    module.exports = Error.captureStackTrace || function (error) {\n      var container = new Error();\n      Object.defineProperty(error, \"stack\", {\n        configurable: true,\n        get: function getStack() {\n          var stack = container.stack;\n          Object.defineProperty(this, \"stack\", {\n            value: stack\n          });\n          return stack;\n        }\n      });\n    };\n  }\n});\n\n// node_modules/create-error-class/index.js\nvar require_create_error_class = __commonJS({\n  \"node_modules/create-error-class/index.js\"(exports, module) {\n    \"use strict\";\n\n    var captureStackTrace = require_capture_stack_trace();\n    function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    }\n    module.exports = function createErrorClass2(className, setup) {\n      if (typeof className !== \"string\") {\n        throw new TypeError(\"Expected className to be a string\");\n      }\n      if (/[^0-9a-zA-Z_$]/.test(className)) {\n        throw new Error(\"className contains invalid characters\");\n      }\n      setup = setup || function (message) {\n        this.message = message;\n      };\n      var ErrorClass = function () {\n        Object.defineProperty(this, \"name\", {\n          configurable: true,\n          value: className,\n          writable: true\n        });\n        captureStackTrace(this, this.constructor);\n        setup.apply(this, arguments);\n      };\n      inherits(ErrorClass, Error);\n      return ErrorClass;\n    };\n  }\n});\n\n// src/middleware/httpErrors.js\nvar import_create_error_class = __toESM(require_create_error_class());\nvar HttpError = (0, import_create_error_class.default)(\"HttpError\", function (res, ctx) {\n  const truncatedUrl = res.url.length > 400 ? `${res.url.slice(0, 399)}\\u2026` : res.url;\n  let msg = `${res.method}-request to ${truncatedUrl} resulted in `;\n  msg += `HTTP ${res.statusCode} ${res.statusMessage}`;\n  this.message = msg.trim();\n  this.response = res;\n  this.request = ctx.options;\n});\nvar httpErrors_default = () => ({\n  onResponse: (res, ctx) => {\n    const isHttpError = res.statusCode >= 400;\n    if (!isHttpError) {\n      return res;\n    }\n    throw new HttpError(res, ctx);\n  }\n});\nexport { httpErrors_default };","map":{"version":3,"mappings":";;;AAAA;EAAA;IAAA;;IAEAA,OAAOC,UAAUC,MAAMC,qBAAqB,UAAUC,OAAO;MAC5D,IAAIC,YAAY,IAAIH,OAAM;MAE1BI,OAAOC,eAAeH,OAAO,SAAS;QACrCI,cAAc;QACdC,KAAK,SAASC,WAAW;UACxB,IAAIC,QAAQN,UAAUM;UAEtBL,OAAOC,eAAe,MAAM,SAAS;YACpCK,OAAOD;UACR,CAAC;UAED,OAAOA;QACR;MACD,CAAC;IACF;EAAA;AAAA;;;ACjBA;EAAA;IAAA;;IACA,IAAIR,oBAAoBU;IAExB,SAASC,SAASC,MAAMC,WAAW;MAClCD,KAAKE,SAASD;MACdD,KAAKG,YAAYZ,OAAOa,OAAOH,UAAUE,WAAW;QACnDE,aAAa;UACZR,OAAOG;UACPM,YAAY;UACZC,UAAU;UACVd,cAAc;QACf;MACD,CAAC;IACF;IAEAR,OAAOC,UAAU,SAASsB,kBAAiBC,WAAWC,OAAO;MAC5D,IAAI,OAAOD,cAAc,UAAU;QAClC,MAAM,IAAIE,UAAU,mCAAmC;MACxD;MAEA,IAAI,iBAAiBC,KAAKH,SAAS,GAAG;QACrC,MAAM,IAAItB,MAAM,uCAAuC;MACxD;MAEAuB,QAAQA,SAAS,UAAUG,SAAS;QACnC,KAAKA,UAAUA;MAChB;MAEA,IAAIC,aAAa,YAAY;QAC5BvB,OAAOC,eAAe,MAAM,QAAQ;UACnCC,cAAc;UACdI,OAAOY;UACPF,UAAU;QACX,CAAC;QAEDnB,kBAAkB,MAAM,KAAKiB,WAAW;QAExCK,MAAMK,MAAM,MAAMC,SAAS;MAC5B;MAEAjB,SAASe,YAAY3B,KAAK;MAE1B,OAAO2B;IACR;EAAA;AAAA;;;AC3CA,gCAA6BG;AAE7B,IAAMC,gBAAYC,mCAAiB,aAAa,UAASC,KAAKC,KAAK;EACjE,MAAMC,eAAeF,IAAIG,IAAIC,SAAS,MAAM,GAAGJ,IAAIG,IAAIE,MAAM,GAAG,GAAG,YAAOL,IAAIG;EAC9E,IAAIG,MAAM,GAAGN,IAAIO,qBAAqBL;EACtCI,OAAO,QAAQN,IAAIQ,cAAcR,IAAIS;EAErC,KAAKhB,UAAUa,IAAII,MAAK;EACxB,KAAKC,WAAWX;EAChB,KAAKY,UAAUX,IAAIY;AACrB,CAAC;AAED,IAAOC,qBAAQ,OAAO;EACpBC,YAAY,CAACf,KAAKC,QAAQ;IACxB,MAAMe,cAAchB,IAAIQ,cAAc;IACtC,IAAI,CAACQ,aAAa;MAChB,OAAOhB;IACT;IAEA,MAAM,IAAIF,UAAUE,KAAKC,GAAG;EAC9B;AACF","names":["module","exports","Error","captureStackTrace","error","container","Object","defineProperty","configurable","get","getStack","stack","value","require_capture_stack_trace","inherits","ctor","superCtor","super_","prototype","create","constructor","enumerable","writable","createErrorClass","className","setup","TypeError","test","message","ErrorClass","apply","arguments","__toESM","HttpError","import_create_error_class","res","ctx","truncatedUrl","url","length","slice","msg","method","statusCode","statusMessage","trim","response","request","options","httpErrors_default","onResponse","isHttpError"],"sources":["/Users/Shared/Files From f.localized/GitHub/ReactWebApplications/SHAREME/shareme_fronted/node_modules/get-it/node_modules/capture-stack-trace/index.js","/Users/Shared/Files From f.localized/GitHub/ReactWebApplications/SHAREME/shareme_fronted/node_modules/get-it/node_modules/create-error-class/index.js","/Users/Shared/Files From f.localized/GitHub/ReactWebApplications/SHAREME/shareme_fronted/node_modules/get-it/src/middleware/httpErrors.js"],"sourcesContent":["'use strict';\n\nmodule.exports = Error.captureStackTrace || function (error) {\n\tvar container = new Error();\n\n\tObject.defineProperty(error, 'stack', {\n\t\tconfigurable: true,\n\t\tget: function getStack() {\n\t\t\tvar stack = container.stack;\n\n\t\t\tObject.defineProperty(this, 'stack', {\n\t\t\t\tvalue: stack\n\t\t\t});\n\n\t\t\treturn stack;\n\t\t}\n\t});\n};\n","'use strict';\nvar captureStackTrace = require('capture-stack-trace');\n\nfunction inherits(ctor, superCtor) {\n\tctor.super_ = superCtor;\n\tctor.prototype = Object.create(superCtor.prototype, {\n\t\tconstructor: {\n\t\t\tvalue: ctor,\n\t\t\tenumerable: false,\n\t\t\twritable: true,\n\t\t\tconfigurable: true\n\t\t}\n\t});\n}\n\nmodule.exports = function createErrorClass(className, setup) {\n\tif (typeof className !== 'string') {\n\t\tthrow new TypeError('Expected className to be a string');\n\t}\n\n\tif (/[^0-9a-zA-Z_$]/.test(className)) {\n\t\tthrow new Error('className contains invalid characters');\n\t}\n\n\tsetup = setup || function (message) {\n\t\tthis.message = message;\n\t};\n\n\tvar ErrorClass = function () {\n\t\tObject.defineProperty(this, 'name', {\n\t\t\tconfigurable: true,\n\t\t\tvalue: className,\n\t\t\twritable: true\n\t\t});\n\n\t\tcaptureStackTrace(this, this.constructor);\n\n\t\tsetup.apply(this, arguments);\n\t};\n\n\tinherits(ErrorClass, Error);\n\n\treturn ErrorClass;\n};\n","import createErrorClass from 'create-error-class'\n\nconst HttpError = createErrorClass('HttpError', function(res, ctx) {\n  const truncatedUrl = res.url.length > 400 ? `${res.url.slice(0, 399)}â€¦` : res.url\n  let msg = `${res.method}-request to ${truncatedUrl} resulted in `\n  msg += `HTTP ${res.statusCode} ${res.statusMessage}`\n\n  this.message = msg.trim()\n  this.response = res\n  this.request = ctx.options\n})\n\nexport default () => ({\n  onResponse: (res, ctx) => {\n    const isHttpError = res.statusCode >= 400\n    if (!isHttpError) {\n      return res\n    }\n\n    throw new HttpError(res, ctx)\n  }\n})\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}